% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalizeresiduals.R
\name{unnormalize.resids}
\alias{unnormalize.resids}
\title{unNormalize residuals}
\usage{
unnormalize.resids(r, rn, len = NULL)
}
\arguments{
\item{r}{Column vector of the original, input residuals for a grid cell}

\item{rn}{Column vector of the input, randomized, normally distributed residuals}

\item{len}{Maximum length of the time series to read.  If the data read is
longer, it will be trimmed.  (Default: read entire time series, regardless of
length.)}
}
\description{
A vector of residuals must be normalized for the fldgen algorithm to work
properly. This function takes a vector of residuals (T or P), calculates the
quantiles of each residual, and maps the residual to the corresponding
quantile value in a normal distribution.
}
\details{
The output will be a list with Three fields:
\describe{
  \item{\strong{r}}{Column vector of the original, input residuals for a grid cell - need because CDF of grid cell unknown}
  \item{\strong{rn}}{Column vector of the input, randomized, normally distributed residuals.}
  \item{\strong{rnew}}{Column vector of the quantiles of each input residual.}
}

UPDATE: The data at each time is represented as a flattened vector of grid cells.
The flattening is performed by transposing to lat, lon ordering, so that lat
will be the most rapidly varying index (because R uses
Fortran-style indexing).  Then the spatial dimensions are discarded,
resulting in a 1D vector.  The time dimension is kept, resulting in a matrix
with years in rows and grid cells in columns.  The dimensions of the matrix
will be Nyear x Ngrid, where Nyear is the number of years in the data set,
and Ngrid is the number of grid cells.

Conventionally, we refer to the output list as \code{griddata}.  Notably, any
other function with a \code{griddata} argument is expecting one of these
structures.
}
