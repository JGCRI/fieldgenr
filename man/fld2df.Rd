% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{fld2df}
\alias{fld2df}
\alias{fldts2df}
\title{Reorganize a spatial field into a data frame}
\usage{
fld2df(fld, griddata, ti = NULL)

fldts2df(fldts, griddata)
}
\arguments{
\item{fld}{Vector of ngrid=nlat*nlon values: a single time slice of the
field.}

\item{griddata}{The griddata structure returned from
\code{\link{read.temperatures}}.}

\item{ti}{The time index.  The time variable in the output will be set to
\code{griddata$time[ti]}.  If the time index is omitted, then the time
variable will be omitted from the output.}

\item{fldts}{Matrix [ntime, ngrid] of spatial fields}
}
\value{
Data frame with variables lat, lon, value, and optionally t.
}
\description{
The easiest way to plot this sort of data in ggplot is to organize it into a
frame with lat, lon, and value columns.  To do this you have to replicate the
latitude and longitude values as required.  These functions convert the
matrix representation of fields into a data frame with variables suitable for
plotting.  \code{fld2df} operates on a single time slice, while
\code{fldts2df} works on an entire time sequence.

Reorganize a time sequence of spatial fields into a data frame
}
\details{
In addition to reformatting the data as a data frame, these functions remap
0-360 longitude to -180, 180.
}
