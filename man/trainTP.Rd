% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trainTP.R
\name{trainTP}
\alias{trainTP}
\title{Train the emulator on a set of input ESM temperature and precipitation data.}
\usage{
trainTP(dat, latvar = "lat", lonvar = "lon", meanfield = pscl_analyze,
  record_absolute = FALSE)
}
\arguments{
\item{dat}{A single directory name, or a list of netCDF files.  If a
directory name is given, all netCDF files in the directory will be used.}

\item{latvar}{Name of the latitude coordinate variable in the netCDF files.
Normally this is \code{'lat'}, but occasionally it will be something
different, such as \code{'lat_2'}.}

\item{lonvar}{Name of the longitude coordinate variable in the netCDF files.}

\item{meanfield}{Function to compute the mean temperature response field.
The default is a linear pattern scaling algorithm.}

\item{record_absolute}{If \code{TRUE}, record absolute paths for the input
files; otherwise, record relative paths.}
}
\value{
A \code{fldgen} object.
}
\description{
This function runs all of the steps in the analysis that depend only on the
input data.  The results are saved in a structure of class \code{fldgen}.
This structure contains everything the emulator has learned about the model.
Therefore, it can be saved and reloaded in future sessions to bypass the
analysis step.
}
\details{
The steps run by this procedure are \code{\link{read.temperatures}},
\code{\link{read.precipitations}},
\code{\link{pscl_analyze}}, and \code{\link{eof_analyze}}.  Additionally,
the global mean temperature, global mean precipitation, and the FFT of the
EOF decomposition are calculated and stored.  For backward compatibility,
all of those functions remain part of the public interface.

At present the field generation functions still take as arguments the
individual components of the structure; however, in the next version they
will expect a \code{fldgen} object, which can be constructed manually using
\code{\link{fldgen_object}}.

The names of the input files are recorded in the \code{infiles} field of the
returned object.  This is for the your information only; none of the code
here does anything with the recorded filenames.  You have the choice of
recording either absolute filenames (useful for determining exactly which
dataset was used, if you have a lot of similarly named files) or relative
filenames (useful if you might distribute a saved model to other users who
might not have the same directory structure as you).
}
